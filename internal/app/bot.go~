package app

import (
	"github.com/Sanchir01/candles_backend/internal/feature/candles"
	tgbotapi "github.com/go-telegram-bot-api/telegram-bot-api/v5"
	"log"
	"runtime/debug"
)

type Bot struct {
	bot *tgbotapi.BotAPI
}
type BotsServices struct {
	candles *candles.Bot
}

func NewBotsServices(services *Services) *BotsServices {

	return &BotsServices{
		candles: candles.NewOrdersBot(services.CandlesService),
	}
}

func (b *Bot) Start() error {
	b.bot.Debug = true
	updates, err := b.initUpdatesChannel()
	if err != nil {
		return err
	}
	b.handleUpdate(updates)
	return nil
}

func (b *Bot) initUpdatesChannel() (tgbotapi.UpdatesChannel, error) {
	u := tgbotapi.NewUpdate(0)
	u.Timeout = 60
	return b.bot.GetUpdatesChan(u), nil

}
func (b *Bot) handleUpdate(updates tgbotapi.UpdatesChannel) {
	defer func() {
		if p := recover(); p != nil {
			log.Printf("panic recoverL: %v\n%s", p, string(debug.Stack()))
		}
	}()
	for update := range updates {
		if update.Message != nil {
			continue
		}
	}
}
