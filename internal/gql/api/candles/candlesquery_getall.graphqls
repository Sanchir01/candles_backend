extend type CandlesQuery {
    allCandles(
        filter: CandlesFilterInput,
        sort:CandlesSortEnum,
        pageSize: PageSize! = 20
        pageNumber: PageNumber! = 1,
    ): AllCategoryResult! @goField(forceResolver: true)
}
enum CandlesSortEnum {
    CREATED_AT_ASC
    CREATED_AT_DESC
    SORT_RANK_ASC
    SORT_RANK_DESC
    PRICE_ASC
    PRICE_DESC
}

input CandlesFilterInput {
    categoryId: [Uuid!]
    colorId: [Uuid!]
}

union AllCategoryResult =
    | AllCandlesOk
    | VersionMismatchProblem
    | InternalErrorProblem

type AllCandlesOk {
    candles: [Candles!]!
    totalCount(estimate:UInt! = 1000):TotalCountResolvingResult! @goField(forceResolver: true)
}

type TotalCountResolvingOk{
    totalCount: UInt!
}

union TotalCountResolvingResult =
    | TotalCountResolvingOk
    | VersionMismatchProblem
    | InternalErrorProblem