package resolver

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.49

import (
	"context"

	featurecandles "github.com/Sanchir01/candles_backend/internal/feature/candles"
	"github.com/Sanchir01/candles_backend/internal/gql/model"
	responseErr "github.com/Sanchir01/candles_backend/pkg/lib/api/response"
)

// AllCandles is the resolver for the allCandles field.
func (r *candlesQueryResolver) AllCandles(ctx context.Context, obj *model.CandlesQuery) (model.AllCategoryResult, error) {
	allCandles, err := r.candlesStr.AllCandles(ctx)
	if err != nil {
		return responseErr.NewInternalErrorProblem("такая категория уже есть"), err
	}
	gqlCandles, err := featurecandles.MapCandlesToGql(allCandles)
	if err != nil {
		return responseErr.NewInternalErrorProblem("не удалось выполнить операцию по превращению в gql model"), err
	}
	return model.AllCandlesOk{Candles: gqlCandles}, nil
}
