package resolver

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.49

import (
	"context"
	"log/slog"

	"github.com/Sanchir01/candles_backend/internal/gql/model"
	responseErr "github.com/Sanchir01/candles_backend/pkg/lib/api/response"
	"github.com/Sanchir01/candles_backend/pkg/lib/utils"
)

// CreateCategory is the resolver for the createCategory field.
func (r *categoryMutationResolver) CreateCategory(ctx context.Context, obj *model.CategoryMutation, input *model.CreateCategoryInput) (model.CategoryCreateResult, error) {
	r.lg.Info("create category", slog.String("name", input.Name))
	slug, err := utils.Slugify(input.Name)
	if err != nil {
		return responseErr.NewInternalErrorProblem("error for create slug for category"), err
	}

	id, err := r.CategoryStr.CreateCategory(ctx, input.Name, slug)
	if err != nil {
		return responseErr.NewInternalErrorProblem("error for creating category"), err
	}

	return model.CategoryCreateOk{ID: id}, nil
}
