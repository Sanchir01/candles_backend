package resolver

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.49

import (
	"context"

	featurecategory "github.com/Sanchir01/candles_backend/internal/feature/category"
	"github.com/Sanchir01/candles_backend/internal/gql/model"
	responseErr "github.com/Sanchir01/candles_backend/pkg/lib/api/response"
)

// GetAllCategory is the resolver for the getAllCategory field.
func (r *categoryQueryResolver) GetAllCategory(ctx context.Context, obj *model.CategoryQuery) (model.CategoryGetAllResult, error) {
	allCategory, err := r.categoryStr.AllCategories(ctx)
	if err != nil {
		r.lg.Warn("sdas", err.Error())
		return responseErr.NewInternalErrorProblem("ошибка при получении всех категорий"), nil
	}
	categories, err := featurecategory.MapCategoryToGql(allCategory)
	if err != nil {
		return responseErr.NewInternalErrorProblem("error for get all category db"), nil
	}
	return model.CategoryGetAllOk{Category: categories}, err
}
