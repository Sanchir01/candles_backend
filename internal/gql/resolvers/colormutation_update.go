package resolver

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.73

import (
	"context"

	"github.com/Sanchir01/candles_backend/internal/gql/model"
	responseErr "github.com/Sanchir01/candles_backend/pkg/lib/api/response"
	"github.com/Sanchir01/candles_backend/pkg/lib/utils"
)

// UpdateColor is the resolver for the updateColor field.
func (r *colorMutationResolver) UpdateColor(ctx context.Context, obj *model.ColorMutation, input model.UpdateColorInput) (model.UpdateColorResult, error) {
	slug, err := utils.Slugify(input.Title)
	if err != nil {
		return responseErr.NewInternalErrorProblem("error for creating slug"), nil
	}
	id, err := r.env.Services.ColorService.UpdateColorById(ctx, input.ID, input.Title, slug)
	if err != nil {
		return responseErr.NewInternalErrorProblem("Ошибка пи обновления цвета"), nil
	}
	return model.UpdateColorOk{
		ID: id,
	}, nil
}
