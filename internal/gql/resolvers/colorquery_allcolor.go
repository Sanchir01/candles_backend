package resolver

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.51

import (
	"context"

	featurecolor "github.com/Sanchir01/candles_backend/internal/feature/color"
	"github.com/Sanchir01/candles_backend/internal/gql/model"
	responseErr "github.com/Sanchir01/candles_backend/pkg/lib/api/response"
)

// AllColor is the resolver for the allColor field.
func (r *colorQueryResolver) AllColor(ctx context.Context, obj *model.ColorQuery) (model.AllColorResult, error) {
	colors, err := r.colorStr.AllColor(ctx)
	if err != nil {
		return responseErr.NewInternalErrorProblem(err.Error()), err
	}
	r.lg.Info("colors", colors)
	gqlcolors, err := featurecolor.MapColorToGql(colors)
	if err != nil {
		return responseErr.NewInternalErrorProblem("error for mapping gql model"), err
	}
	return model.AllColorOk{Colors: gqlcolors}, nil
}
