package resolver

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.55

import (
	"context"

	"github.com/Sanchir01/candles_backend/internal/gql/model"
)

// CreateOrder is the resolver for the createOrder field.
func (r *orderMutationsResolver) CreateOrder(ctx context.Context, obj *model.OrderMutations, input model.CreateOrderInput) (model.CreateOrderResult, error) {
	//conn, err := r.env.DataBase.PrimaryDB.Acquire(ctx)
	//
	//if err != nil {
	//	return responseErr.NewInternalErrorProblem("Database connection error"), nil
	//}
	//tx, err := conn.BeginTx(ctx, pgx.TxOptions{})
	//defer func() {
	//	if err != nil {
	//		rollbackErr := tx.Rollback(ctx)
	//		if rollbackErr != nil {
	//			err = errors.Join(err, rollbackErr)
	//			return
	//		}
	//	}
	//}()
	//userCookie, err := customMiddleware.GetJWTClaimsFromCtx(ctx)
	//if err != nil {
	//	return responseErr.NewInternalErrorProblem("не удалось получить профиль"), err
	//}
	//
	//orderId, err := r.env.Services.OrderService.CreateOrder(ctx, tx, userCookie, "processing")
	return model.CreateOrderOk{
		Ok: "",
	}, nil
}
