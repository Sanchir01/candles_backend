package resolver

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.63

import (
	"context"

	"github.com/Sanchir01/candles_backend/internal/gql/model"
	customMiddleware "github.com/Sanchir01/candles_backend/internal/handlers/middleware"
	responseErr "github.com/Sanchir01/candles_backend/pkg/lib/api/response"
)

// AllUserOrders is the resolver for the allUserOrders field.
func (r *orderQueryResolver) AllUserOrders(ctx context.Context, obj *model.OrderQuery) (model.AllUserOrdersResult, error) {
	userCookie, err := customMiddleware.GetJWTClaimsFromCtx(ctx)
	if err != nil {
		return responseErr.NewInternalErrorProblem("не удалось получить профиль"), err
	}

	orders, err := r.env.Services.OrderService.AllUserOrders(ctx, userCookie.ID)
	if err != nil {
		r.env.Logger.Error("failed to get orders", err.Error())
		return responseErr.NewInternalErrorProblem("failed to get orders"), err
	}
	return model.AllUserOrdersOk{
		Orders: orders,
	}, nil
}
