package resolver

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.57

import (
	"context"

	"github.com/Sanchir01/candles_backend/internal/gql/model"
	customMiddleware "github.com/Sanchir01/candles_backend/internal/handlers/middleware"
	responseErr "github.com/Sanchir01/candles_backend/pkg/lib/api/response"
)

// Profile is the resolver for the profile field.
func (r *userQueryResolver) Profile(ctx context.Context, obj *model.UserQuery) (model.UserProfileResult, error) {
	userCookie, err := customMiddleware.GetJWTClaimsFromCtx(ctx)
	if err != nil {
		return responseErr.NewInternalErrorProblem("не удалось получить профиль"), err
	}
	user, err := r.env.Services.UserService.UserById(ctx, userCookie.ID)
	if err != nil {
		r.env.Logger.Warn("не удалось получить профиль")
		return responseErr.NewInternalErrorProblem("не удалось получить профиль"), err
	}
	return model.UserProfileOk{
		Profile: user,
	}, nil
}
